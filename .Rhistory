my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
4!=4.0
FALSE && 6 >= 6 || 7 >= 8 || 50 <= 49.5
xor(!!TRUE, !!FALSE)
xor(4 >= 9, 8 != 8.0)
swirl()
libary(swirl)
library(swirl)
swirl()
9
swirl()
Sys.Date()
mean(c(2, 4, 5))
ls()
stuff <- list(ls())
stuff
rm(stuff)
rm(list=ls())
library(swirl)
swswirl()
swirl()
bye()
swirl()
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist)
play()
?plot
nxt()
plot(x = cars$speed, y = cars$dist, xlab='Speed')
plot(x = cars$speed, y = cars$dist, xlab='Speed', ylab='Stopping Distance')
plot(x = cars$speed, y = cars$dist,  ylab='Stopping Distance')
plot(x = cars$speed, y = cars$dist, xlab='Speed', ylab='Stopping Distance')
plot(x = cars$speed, y = cars$dist, main='My Plot')
plot(cars, main='My Plot')
plot(cars, sub='My Plot Subtitle')
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data(mtcars)
?boxplot()
?boxplot
boxplot(data = mtcars, formula = mpg ~ cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
library(swirl)
install_from_swirl("Course Name Here")
install_from_swirl("Data Analysis")
swirl()
install_from_swirl("Mathematical Biostatistics Boot Camp")
swirl()
install_from_swirl("Open Intro")
swirl()
install_from_swirl("Regression Models")
swirl()
?gl
c(rnorm(10), runif(10), rnorm(10, 1))
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
f <- gl(3, 10)
f
tapply(x, f, mean)
> tapply(x, f, mean, simplify = FALSE)
tapply(x, f, mean, simplify = FALSE)
tapply(x, f, range)
log(-1)
printmessage <- function(x) {
if(x > 0)
print("x is greater than zero")
else
print("x is less than or equal to zero")
invisible(x)
}
printmessage(1)
printmessage(NA)
printmessage2 <- function(x) {
if(is.na(x))
print("x is a missing value!")
else if(x > 0)
print("x is greater than zero")
else
print("x is less than or equal to zero")
invisible(x)
}
x <- log(-1)
printmessage2(x)
mean(x)
rm(list=ls())
mean(x)
traceback()
lm(y - x)
traceback()
debug(lm)
lm(y-x)
?
q
q
library(swirl)
swirl()
y <- 100
cars$type
sqrt(y)
z <- sqrt(y)
?sqrt
cars
10
range(cars$price)
quit
q
0
?solve
set.seed(13435)
X <- data.frame("var1"=sample(1:5), "var2"=sample(6:10),"var3"=sample(11:15))
X
X<-X[sample(1:5),]
X
X$var2[c(1,3)]=NA
X
sample(1:5)
X[,1]
X[,"var1"]
X[1:2, "var2"]
X[(X$var1 <= 3 & X$var3 > 1),]
X[(X$var1 <= 3 & X$var3 > 11),]
X[(X$var1 <= 3 | X$var3 > 15),]
X[which(X$var2 > 8), ]
X[(X$var2 > 8), ]
sort(X$var1)
sort(X$var1, decreasing = TRUE)
sort(X$var2, na.last = TRUE)
X[order(X$var1),]
X[order(X$var1, X$var3),]
library(plyr)
arrange(X, var1)
arrange(X, desc(var1))
X$var4 <- rnorm(5)
X
Y <- cbind(X, rnorm(5))
Y
library(swirl)
swirl()
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubrdate)
help(package = lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
minute(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1-9-2012")
dmy("1-9-2012")
mdy("1-9-2012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 8, minutes = 44)
this_moment
?now
nyc <- now(tzone = "America/New York")
nyc <- now("America/New York")
nyc <- now("America/New_York")
nyc
now("America/New_York")
play()
now("America/New_York")
nyc <- now("America/New_York")
nxt()
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(arrive, last_time)
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
library(swirl)
swirl()
head(airquality)
xyplot(Ozone ~ Wind, airquality)
xyplot(Ozone ~ Wind, airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, c(2,1))
xyplot(y~x|f, layout=c(2,1))
v1
v2
myedit("plot1.R")
pathtofile("plot1.R", local=TRUE)
pathtofile(fileName = "plot1.R", local=TRUE)
we
myedit("plot1.R")
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat | color*cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
library(swirl)
swirl(0)
cmat
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust])
play()
newClust
nxt()
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist((x, y, newCx, newCy))
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmean(dataFrame, centers = 3)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x, y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1: 3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1: 12))
dataFrame <- data.frame(x, y)
kmeansObj <- kmeans(dataFrame, centers = 3)
names(kmeansObj)
kmeansObj$cluster
kmeansObj
par(mar = rep(0.2, 4))
plot(x, y, col = kmeansObj$cluster, pch = 19, cex = 2)
points(kmeansObj$centers, col = 1: 3, pch = 3, cex = 3, lwd = 3)
set.seed(1234)
dataMatrix <- as.matrix(dataFrame)[sample(1: 12), ]
kmeansObj2 <- kmeans(dataMatrix, centers = 3)
par(mfrow = c(1, 2), mar = c(2, 4, 0.1, 0.1))
image(t(dataMatrix)[, nrow(dataMatrix): 1], yaxt = "n")
image(t(dataMatrix)[, order(kmeansObj$cluster)], yaxt = "n")
library(swirl)
swirl()
quit
quit()
library(swirl)
swirl()
head(dataMatrix)
play()
head(dataMatrix)
nxt()
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
play()
dataMatrix
nxt()
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
d
svd2$d
dim(faceData)
a1 <- (svd$u[,1] * svd$d[1]) %*% t(svd1$v[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a3 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library(swirl)
swirl()
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject = 1)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[,:1:12])
names(sub1[,1:12])
myedit("showXY.R")
showMe(c(1:6))
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
play()
mdist
nxt()
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)], ccenters = 6)
View(sub1)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1, [,1:3])
names(sub1[,1:3])
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
?weekdays
x <- Sys.time()
weekdays(x)
months(x)
julian(x)
?lapply
?gl
f <- gl(3, 10
)
f
swirl()
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
play()
?strsplit
nxt()
strsplit(cnames, '|')
strsplit(cnames, '|', fixed = TRUE)
cnames <- strsplit(cnames, '|', fixed = TRUE)
cnames
names(pm0) <- cnames[[1]][wcol]
names(pm0) <- make.names(cnames[[1]][wcol])
play()
?make.names
nxt()
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1)
boxplot(log10(x0), log10(x1))
negative <- x1 < 0
sum(negative, nna.rm = TRUE)
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), '%Y%m%d')
quit()
library(swirl)
swirl()
quit()
data1 <- read.csv(url("http://stat.columbia.edu/~rachel/datasets/nyt1.csv"))
head(data1)
table(data1$Age)
hist(data1$Age)
?cut
data1$age_group <- cut(data1$Age, c(0,18) ,labels = c("< 18", ">= 18"))
data1$age_group <- cut(data1$Age, c(0,18,108) ,labels = c("< 18", ">= 18"))
head(data1)
head(data1,50)
head(data1,100)
data1$age_group <- cut(data1$Age, c(18,108) ,labels = c("< 18", ">= 18"))
data1$age_group <- cut(data1$Age, c(,18,108) ,labels = c("< 18", ">= 18"))
data1$age_group <- cut(data1$Age, c(-1,18,108) ,labels = c("< 18", ">= 18"))
head(data1,100)
data1$age_group <- cut(data1$Age, c(0,18,999) ,labels = c("< 18", ">= 18"),include.lowest = TRUE)
head(data1,100)
data1$age_group <- cut(data1$Age, c(0,18,999) ,labels = c("< 18", ">= 18"),include.lowest = TRUE, right = FALSE)
head(data1,100)
cut_vals <- c(0,18,24, 34, 44, 54, 64, 999)
cut_labels <- c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", "65+")
data1$age_group <- cut(data1$Age, cut_vals ,labels = cut_labels,include.lowest = TRUE, right = FALSE)
head(data1,100)
data1$age_group <- cut(data1$Age, cut_vals ,labels = cut_labels,include.lowest = TRUE, right = TRUE)
cut_vals <- c(0,17,24, 34, 44, 54, 64, 999)
data1$age_group <- cut(data1$Age, cut_vals ,labels = cut_labels,include.lowest = TRUE, right = TRUE)
head(data1,100)
hist(data1$age_group, data1$Impressions)
boxplot(data1$age_group, data1$Impressions)
barplot(data1$age_group, data1$Impressions)
?barplot
barplot(data1$Impressions,data1$age_group)
barplot(data1$age_group)
boxplot(data1$age_group, data1$Impressions)
boxplot(data1$Impressions,data1$age_group)
data1$Impressions
data1$age_group
library(ggplot2)
g <- qplot(data1$Impressions)
g + geom_boxplot()
g <- qplot(data1$Impressions, data1$age_group)
g + geom_line()
g <- qplot(data1$Impressions)
g <- qplot(Impressions, age_group, data = data1, group = age_group)
g + geom_boxplot()
g <- qplot(Impressions, data = data1, group = age_group)
g + geom_boxplot()
qplot(Impressions, age_group, data = data1, geom = "boxplot")
qplot(age_group, Impressions, data = data1, geom = "boxplot")
data1$click_thru_rate <- data1$Clicks/data1$Impressions
qplot(age_group, click_thru_rate, data = data1, geom = "boxplot")
qplot(age_group, click_thru_rate, data = data1, geom = "histogram")
qplot(click_thru_rate, data = data1, geom = "histogram", facet = . ~ age_group)
qplot(click_thru_rate, data = data1, geom = "histogram", facet = . ~ age_group, binwidth = .01)
2
qplot(click_thru_rate, data = data1, geom = "histogram", facet = . ~ age_group, binwidth = 2)
qplot(click_thru_rate, data = data1, geom = "histogram", facet = . ~ age_group, binwidth = .001)
qplot(click_thru_rate, data = data1, geom = "histogram", facet = . ~ age_group, binwidth = 1/50)
head(data1)
qplot(click_thru_rate, data = data1, facets = . ~ age_group)
qplot(click_thru_rate, data = data1(data1$Clicks > 0,), facets = . ~ age_group)
qplot(click_thru_rate, data = data1[data1$Clicks > 0,], facets = . ~ age_group)
qplot(impressions, data = data1, facets = . ~ age_group)
qplot(Impressions, data = data1, facets = . ~ age_group)
library(swirl)
swirl()
head(dates)
hist(dates[negative], "month")
swirl()
swirl()
?State
setwd("C:/Users/Bill/Dropbox/Library/Data Analytics/Doing Data Science")
require(gdata)
initdata <- read.xls("ProjectData.xlsx",perl="C:/Perl64/bin/perl.exe")
setwd("C:/Users/Bill/Dropbox/Library/Data Analytics/Coursera - Data Analysis and Statistical Inference/Project/CDAaS_CourseProject")
initdata <- read.xls("ProjectData.xlsx",perl="C:/Perl64/bin/perl.exe")
initdata$damageRate <- initdata$Cases.Damaged/initdata$Cases.Shipped
?read.xls
initdata <- read.xls("ProjectData.xlsx",perl="C:/Perl64/bin/perl.exe", stringsAsFactors= FALSE)
initdata$Cases.Shipped <- as.numeric(initdata$Cases.Shipped)
initdata <- read.xls("ProjectData.xlsx",perl="C:/Perl64/bin/perl.exe", stringsAsFactors= FALSE)
initdata$damageRate <- initdata$Cases.Damaged/initdata$Cases.Shipped
summary(initdata$Case.Weight)
summary(initdata$damageRate)
hist(initdata$Case.Weight)
plot(initdata$Case.Weight, initdata$damageRate)
